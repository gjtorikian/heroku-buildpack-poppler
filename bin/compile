#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2

# debugm
# set -x
echo "-----> We are building libpixman and lippoppler in '$PWD' with contents:"
ls -a
echo "-----> Present PATH's:"
echo "HOME: '$HOME'"
echo "BUILD_DIR: '$BUILD_DIR'"
echo "CACHE_DIR: '$CACHE_DIR'"
echo "PATH: '$PATH'"
echo "LD_RUN_PATH: '$LD_RUN_PATH'"
echo "LD_LIBRARY_PATH: '$LD_LIBRARY_PATH'"
echo "PKG_CONFIG_PATH: '$PKG_CONFIG_PATH'"

# clean up leaking environment
unset GIT_DIR

### fontconfig is required for libpoppler
if [[ "Darwin" == "$(uname)" ]]
then
    VENDORED_FONTCONFIG="$HOME/Code/heroku-buildpack-fontconfig/vendor/fontconfig" # Just for my local laptop testing
else
    VENDORED_FONTCONFIG="/app/vendor/fontconfig"
fi

cd $BUILD_DIR
curl -OL 'http://www.freedesktop.org/software/fontconfig/release/fontconfig-2.11.0.tar.bz2'
tar xjf fontconfig-2.11.0.tar.bz2
cd fontconfig-2.11.0
CFLAGS='-fPIC -Wall -g -O2' CXXFLAGS='-fPIC -Wall -g -O2' png_CFLAGS='-fPIC -Wall -g -O2' ./configure --with-pic --enable-static --disable-shared --prefix=$VENDORED_FONTCONFIG --disable-docs
make -j5
make install
export PATH="$VENDORED_FONTCONFIG/bin:$PATH"
export LD_RUN_PATH="$VENDORED_FONTCONFIG/lib:/usr/local/lib:/usr/lib:/lib:$LD_RUN_PATH"
export LD_LIBRARY_PATH="$LD_RUN_PATH"
export PKG_CONFIG_PATH="$VENDORED_FONTCONFIG/lib/pkgconfig:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig:/lib/pkgconfig:$PKG_CONFIG_PATH"
### End fontconfig stuff

#Building libpoppler
if [[ "Darwin" == "$(uname)" ]]
then
    VENDORED_LIBPOPPLER="$HOME/Code/heroku-buildpack-libpoppler/vendor/libpoppler" # Just for my local laptop testing
else
    VENDORED_LIBPOPPLER="/app/vendor/libpoppler"
fi

echo "-----> Building libpoppler ... BUILD_DIR: $BUILD_DIR // CACHE_DIR: $CACHE_DIR // PWD: $PWD"
cd $BUILD_DIR
curl -OL 'http://poppler.freedesktop.org/poppler-0.24.4.tar.xz'
tar xJf poppler-0.24.4.tar.xz
cd poppler-0.24.4
#./autogen.sh --prefix=$VENDORED_LIBPOPPLER
CFLAGS='-fPIC -Wall -g -O2' CXXFLAGS='-fPIC -Wall -g -O2' png_CFLAGS='-fPIC -Wall -g -O2' ./configure --with-pic --enable-static --disable-shared --prefix=$VENDORED_LIBPOPPLER
make -j5
make install
export PATH="$VENDORED_LIBPOPPLER/bin:$PATH"
export LD_RUN_PATH="$VENDORED_LIBPOPPLER/lib:$LD_RUN_PATH"
export LD_LIBRARY_PATH="$LD_RUN_PATH"
export PKG_CONFIG_PATH="$VENDORED_LIBPOPPLER/lib/pkgconfig:$PKG_CONFIG_PATH"

echo "-----> Building runtime environment"
cd /app
mkdir -p .profile.d
echo "export VENDORED_FONTCONFIG=\"$VENDORED_FONTCONFIG\"" > .profile.d/libpoppler.sh
echo "export VENDORED_LIBPOPPLER=\"$VENDORED_LIBPOPPLER\"" >> .profile.d/libpoppler.sh
echo "export PATH=\"\$VENDORED_FONTCONFIG/bin:\$VENDORED_LIBPOPPLER/bin:\$PATH\"" >> .profile.d/libpoppler.sh
echo "export LD_RUN_PATH=\"\$VENDORED_FONTCONFIG/lib:\$VENDORED_LIBPOPPLER/lib:\$LD_RUN_PATH\"" >> .profile.d/libpoppler.sh
echo "export LD_LIBRARY_PATH=\"\$VENDORED_FONTCONFIG/lib:\$VENDORED_LIBPOPPLER/lib:\$LD_LIBRARY_PATH\"" >> .profile.d/libpoppler.sh
echo "export PKG_CONFIG_PATH=\"\$VENDORED_FONTCONFIG/lib/pkgconfig:\$VENDORED_LIBPOPPLER/lib/pkgconfig:\$PKG_CONFIG_PATH\"" >> .profile.d/libpoppler.sh
cat .profile.d/libpoppler.sh
